# this docker-compose file is for development mode
# use this docker-compose file with this command
#    docker compose  -f docker-compose-dev.yml up --build

services:                             # this is just a name??

  history:
    image: history 
    build: 
      context: ./history 
      dockerfile: Dockerfile-dev 
    container_name: history
    volumes:   # defines volumes that are shared between my computer and the container
      - /tmp/history/npm-cache:/root/.npm:z  # shares npm cache location
      - ./history/src:/usr/src/app/src:z     # shares source code
    ports:
      - "4003:80"
    environment:
      - PORT=80
      - NODE_ENV=development
      - DBHOST=mongodb://db:27017       # links this container with the database container
      - DBNAME=history
    restart: "no"

  db:     # this is a public MongoDB image from Docker Hub, so we don't need to build it ourselves 
    image: mongo:7.0.12
    container_name: db 

    ports: 
      - "4002:27017"
    restart: "always"    # restart mongo if it crashes


  azure-storage:
    image: azure-storage 
    build: 
      context: azure-storage 
      dockerfile: Dockerfile-dev
    container_name: video-storage 
    volumes:
      - /tmp/azure-storage/npm-cache:/root/.npm:z
      - ./azure-storage/src:/usr/src/app/src:z 
    ports: 
      - "4001:80"         # make sure u map unique ports from the dev computer to each microservice
    environment:
      - PORT=80
      - STORAGE_ACCOUNT_NAME=${STORAGE_ACCOUNT_NAME}   # sets environment variables based on my dev computer's environment variables
      - STORAGE_ACCESS_KEY=${STORAGE_ACCESS_KEY}
    restart: "no"

  video-streaming:                    # config for video-streaming service
    image: video-streaming            # name of our image 
    build:                            # params for building:
      context: ./video-streaming        # directory for the microservice
      dockerfile: Dockerfile-dev            # docker file for microservice 
    container_name: video-streaming   # name of container that gets instantiated for our image
    volumes:
      - /tmp/video-streaming/npm-cache:/root/.npm:z
      - ./video-streaming/src:/usr/src/app/src:z
    ports:                            # port mappings, like the -p flag
      - "4000:80"                        # maps port 80 in the container to port 4000 in the host
    environment:                      # the container's environment varibles, like -e flag
      - PORT=80
      - VIDEO_STORAGE_HOST=video-storage   # links our two containers together
      - VIDEO_STORAGE_PORT=80              # allows video-streaming to connect to video-storage
      - DBHOST=mongodb://db:27017       # links this container with the database container
      - DBNAME=video-streaming
    restart: "no"                     # stops the microservice from restarting after crashing 

# comment 
